[{"path":"/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Emil Hvitfeldt Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emil Hvitfeldt. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hvitfeldt E (2024). prismatic: Color Manipulation Tools. R package version 1.1.2.9000, https://github.com/EmilHvitfeldt/prismatic, https://emilhvitfeldt.github.io/prismatic/.","code":"@Manual{,   title = {prismatic: Color Manipulation Tools},   author = {Emil Hvitfeldt},   year = {2024},   note = {R package version 1.1.2.9000, https://github.com/EmilHvitfeldt/prismatic},   url = {https://emilhvitfeldt.github.io/prismatic/}, }"},{"path":"/index.html","id":"prismatic-","dir":"","previous_headings":"","what":"Color Manipulation Tools","title":"Color Manipulation Tools","text":"goal prismatic provide color manipulation tools R, intuitive, low-dependency functional way. intuitive working functions prefixed clr_ (color) allowing easy autocompletion. low-dependency depends farver. functional functions consistent inputs outputs thus fully pipeable.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Color Manipulation Tools","text":"can install released version prismatic CRAN : development version GitHub :","code":"install.packages(\"prismatic\") # install.packages(\"devtools\") devtools::install_github(\"EmilHvitfeldt/prismatic\")"},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Color Manipulation Tools","text":"prismatic function return colors object, includes new printing method plotting method quickly visualizing colors.  cli available print method best represent colors.","code":"library(prismatic)  terrain10 <- terrain.colors(10)  terrain10 #>  [1] \"#00A600\" \"#2DB600\" \"#63C600\" \"#A0D600\" \"#E6E600\" \"#E8C32E\" \"#EBB25E\" #>  [8] \"#EDB48E\" \"#F0C9C0\" \"#F2F2F2\"  terrain_color <- color(terrain10)  terrain_color #> <colors> #> #00A600FF #2DB600FF #63C600FF #A0D600FF #E6E600FF #E8C32EFF #EBB25EFF #EDB48EFF #F0C9C0FF #F2F2F2FF  plot(terrain_color) ddd <- color(terrain.colors(10)) ddd #> <colors> #> #00A600FF #2DB600FF #63C600FF #A0D600FF #E6E600FF #E8C32EFF #EBB25EFF #EDB48EFF #F0C9C0FF #F2F2F2FF  plot(ddd) clr_grayscale(ddd) |> plot() clr_lighten(ddd, 0.7) |> plot() clr_darken(ddd, 0.5) |> plot() clr_saturate(ddd, 0.5) |> plot() clr_desaturate(ddd, 0.5) |> plot() clr_negate(ddd) |> plot() clr_rotate(ddd, 180) |> plot() clr_protan(ddd) |> plot() clr_tritan(ddd) |> plot() clr_deutan(ddd) |> plot()"},{"path":"/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related work","title":"Color Manipulation Tools","text":"package hugely inspired JavaScript library Qix-/color.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Color Manipulation Tools","text":"Please note prismatic project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/best_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Find highest contrast color — best_contrast","title":"Find highest contrast color — best_contrast","text":"best_contrast() finds color y highest contrast color x.","code":""},{"path":"/reference/best_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find highest contrast color — best_contrast","text":"","code":"best_contrast(x, y = c(\"#010101\", \"#FFFFFF\"))"},{"path":"/reference/best_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find highest contrast color — best_contrast","text":"x vector colors described col color(). Must contain NA. y vector colors described col color(). Must contain NA.","code":""},{"path":"/reference/best_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find highest contrast color — best_contrast","text":"vector length x , element x, element y highest contrast x.","code":""},{"path":"/reference/best_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find highest contrast color — best_contrast","text":"","code":"best_contrast(\"red\") #> [1] \"#010101\" best_contrast(\"grey20\") #> [1] \"#FFFFFF\" best_contrast(\"white\") #> [1] \"#010101\"  best_contrast(rainbow(10), rainbow(3)) #>  [1] \"#00FF00\" \"#0000FF\" \"#0000FF\" \"#0000FF\" \"#0000FF\" \"#0000FF\" \"#00FF00\" #>  [8] \"#00FF00\" \"#00FF00\" \"#00FF00\""},{"path":"/reference/check_color_blindness.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize color vision deficiency — check_color_blindness","title":"Visualize color vision deficiency — check_color_blindness","text":"check_color_blindness() showcase effect three kinds color vision deficiency, Deuteranopia, Protanopia, Tritanopia, time side side plot.","code":""},{"path":"/reference/check_color_blindness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize color vision deficiency — check_color_blindness","text":"","code":"check_color_blindness(col)"},{"path":"/reference/check_color_blindness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize color vision deficiency — check_color_blindness","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[].","code":""},{"path":"/reference/check_color_blindness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize color vision deficiency — check_color_blindness","text":"Invisibly col.","code":""},{"path":"/reference/check_color_blindness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize color vision deficiency — check_color_blindness","text":"","code":"check_color_blindness(rainbow(10))   check_color_blindness(terrain.colors(10))"},{"path":"/reference/clr_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Set alpha in color — clr_alpha","title":"Set alpha in color — clr_alpha","text":"Set alpha color","code":""},{"path":"/reference/clr_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set alpha in color — clr_alpha","text":"","code":"clr_alpha(col, alpha = 0.5)"},{"path":"/reference/clr_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set alpha in color — clr_alpha","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. alpha Numeric 0 1. 0 result full transparency 1 transparency.","code":""},{"path":"/reference/clr_alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set alpha in color — clr_alpha","text":"colors object length col.","code":""},{"path":"/reference/clr_alpha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set alpha in color — clr_alpha","text":"","code":"plot(clr_alpha(rainbow(10), 0.5))   plot(clr_alpha(rainbow(10), 0.2))   plot(clr_alpha(rainbow(10), seq(0, 1, length.out = 10)))"},{"path":"/reference/clr_darken.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a color darker — clr_darken","title":"Make a color darker — clr_darken","text":"Make color darker","code":""},{"path":"/reference/clr_darken.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a color darker — clr_darken","text":"","code":"clr_darken(col, shift = 0.5, space = c(\"HCL\", \"HSL\", \"combined\"))"},{"path":"/reference/clr_darken.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Make a color darker — clr_darken","text":"https://en.wikipedia.org/wiki/HSL_and_HSV https://en.wikipedia.org/wiki/CIELUV https://arxiv.org/abs/1903.06490","code":""},{"path":"/reference/clr_darken.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a color darker — clr_darken","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. shift number 0 1. 0 zero darkening, 1 complete darkening, turning color black. Defaults 0.5. space character string specifying color space adjustment happens. Can either \"HCL\", \"HSL\" \"combined\". Defaults \"HCL\".","code":""},{"path":"/reference/clr_darken.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a color darker — clr_darken","text":"color object length col.","code":""},{"path":"/reference/clr_darken.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a color darker — clr_darken","text":"colors transformed HSL color space (hue, saturation, lightness) lightness color modified. lightness color takes value 0 1, 0 black 1 white. shift takes value 0 1, 0 means lightness stays unchanged 1 means completely black. example, lightness color 0.6 shift 0.5, lightness set halfway point 0.6 0, 0.3. space = \"HSL\" colors transformed HSL space lightness value L adjusted. space = \"HCL\" colors transformed Cylindrical HCL space luminance value L adjusted. space = \"combined\" colors transformed HSL Cylindrical HCL space. color adjusting happening HSL copied values HCL transformation. Thus \"combined\" transformation adjusts luminance HCL space chroma HSL space. information regarding use color spaces, please refer colorspace paper https://arxiv.org/abs/1903.06490.","code":""},{"path":[]},{"path":"/reference/clr_darken.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a color darker — clr_darken","text":"","code":"# Using linear shift plot(clr_darken(rep(\"red\", 11), shift = seq(0, 1, 0.1)))  plot(clr_darken(rep(\"red\", 11), shift = seq(0, 1, 0.1), space = \"HSL\"))  plot(clr_darken(rep(\"red\", 11), shift = seq(0, 1, 0.1), space = \"combined\"))   plot(clr_darken(terrain.colors(10)))   # Using exponential shifts plot(clr_darken(rep(\"red\", 11), shift = log(seq(1, exp(1), length.out = 11))))"},{"path":"/reference/clr_desaturate.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a color more desaturated — clr_desaturate","title":"Make a color more desaturated — clr_desaturate","text":"Make color desaturated","code":""},{"path":"/reference/clr_desaturate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a color more desaturated — clr_desaturate","text":"","code":"clr_desaturate(col, shift = 0.5)"},{"path":"/reference/clr_desaturate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Make a color more desaturated — clr_desaturate","text":"https://en.wikipedia.org/wiki/HSL_and_HSV","code":""},{"path":"/reference/clr_desaturate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a color more desaturated — clr_desaturate","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. shift numeric 0 1. 0 zero desaturation, 1 complete desaturation. Defaults 0.5.","code":""},{"path":"/reference/clr_desaturate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a color more desaturated — clr_desaturate","text":"colors object length col.","code":""},{"path":"/reference/clr_desaturate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a color more desaturated — clr_desaturate","text":"colors transformed HSL color space (hue, saturation, lightness) saturation color  modified. saturation color takes value 0 1, 0 black 1 white. shift takes value 0 1, 0 means saturation stays unchanged 1 means completely desaturated. example, saturation color 0.6 shift 0.5, saturation set halfway point 0.6 0 0.3.","code":""},{"path":[]},{"path":"/reference/clr_desaturate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a color more desaturated — clr_desaturate","text":"","code":"plot(clr_desaturate(terrain.colors(10), shift = 0.5))   plot(clr_desaturate(terrain.colors(10), shift = 0.9))   plot(clr_desaturate(rep(\"firebrick\", 11), shift = seq(0, 1, 0.1)))"},{"path":"/reference/clr_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract multiple components — clr_extract","title":"Extract multiple components — clr_extract","text":"Extract multiple color components time.","code":""},{"path":"/reference/clr_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract multiple components — clr_extract","text":"","code":"clr_extract(   col,   components = c(\"red\", \"green\", \"blue\", \"hue_hsl\", \"saturation\", \"lightness\", \"hue_hcl\",     \"chroma\", \"luminance\") )"},{"path":"/reference/clr_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract multiple components — clr_extract","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. components character vector components extracted. See Details allowed components.","code":""},{"path":"/reference/clr_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract multiple components — clr_extract","text":"data.frame components.","code":""},{"path":"/reference/clr_extract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract multiple components — clr_extract","text":"allowed values components : red green blue hue_hsl saturation lightness hue_hcl chroma luminance clr_extract() preferred extraction functions need extract multiple components time, since repeat transformations.","code":""},{"path":[]},{"path":"/reference/clr_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract multiple components — clr_extract","text":"","code":"clr_extract(rainbow(10)) #>    red green blue hue_hsl saturation lightness   hue_hcl    chroma luminance #> 1  255     0    0       0        100        50  12.17440 179.04898  53.24079 #> 2  255   153    0      36        100        50  39.43336 109.91317  72.26072 #> 3  204   255    0      72        100        50 102.90030 109.55103  93.60533 #> 4   51   255    0     108        100        50 126.51692 133.56456  88.07403 #> 5    0   255  102     144        100        50 132.96726 118.64503  88.19634 #> 6    0   255  255     180        100        50 192.17223  72.08567  91.11322 #> 7    0   102  255     216        100        50 259.85834 127.32690  47.90478 #> 8   51     0  255     252        100        50 267.23002 132.04551  33.81896 #> 9  204     0  255     288        100        50 291.98078 133.06697  51.90416 #> 10 255     0  153     324        100        50 346.98829 133.88359  55.65103  clr_extract(rainbow(10), c(\"hue_hsl\", \"saturation\")) #>    hue_hsl saturation #> 1        0        100 #> 2       36        100 #> 3       72        100 #> 4      108        100 #> 5      144        100 #> 6      180        100 #> 7      216        100 #> 8      252        100 #> 9      288        100 #> 10     324        100"},{"path":"/reference/clr_grayscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform colors to grayscale — clr_grayscale","title":"Transform colors to grayscale — clr_grayscale","text":"clr_grayscale() selection different methods turn colors grayscale.","code":""},{"path":"/reference/clr_grayscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform colors to grayscale — clr_grayscale","text":"","code":"clr_grayscale(   col,   method = c(\"luma\", \"averaging\", \"min_decomp\", \"max_decomp\", \"red_channel\",     \"green_channel\", \"blue_channel\") )  clr_greyscale(   col,   method = c(\"luma\", \"averaging\", \"min_decomp\", \"max_decomp\", \"red_channel\",     \"green_channel\", \"blue_channel\") )"},{"path":"/reference/clr_grayscale.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Transform colors to grayscale — clr_grayscale","text":"https://tannerhelland.com/3643/grayscale-image-algorithm-vb6/ https://en.wikipedia.org/wiki/Luma","code":""},{"path":"/reference/clr_grayscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform colors to grayscale — clr_grayscale","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. method character string specifying grayscaling method. Can one \"luma\", \"averaging\", \"min_decomp\", \"max_decomp\", \"red_channel\", \"green_channel\" \"blue_channel\". Defaults \"luma\".","code":""},{"path":"/reference/clr_grayscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform colors to grayscale — clr_grayscale","text":"colors object length col.","code":""},{"path":"/reference/clr_grayscale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform colors to grayscale — clr_grayscale","text":"method = \"averaging\" red, green blue averaged together create grey value. method poor job representing way human eye sees color. method = \"luma\" (default), weighted average used calculate grayscale values. BT. 709 method ITU Radiocommunication Sector determined weights. method \"min_decomp\" \"max_decomp\", decomposition method used minimum maximum color value selected color value. color rgb(60, 120, 40) \"min_decomp\" value 40 \"max_decomp\" value 120. method \"red_channel\", \"green_channel\" \"blue_channel\", corresponding color channel selected values grayscale.","code":""},{"path":"/reference/clr_grayscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform colors to grayscale — clr_grayscale","text":"","code":"plot(clr_grayscale(rainbow(10)))   plot(clr_grayscale(terrain.colors(10)))   viridis_colors <- c(   \"#4B0055FF\", \"#422C70FF\", \"#185086FF\", \"#007094FF\",   \"#008E98FF\", \"#00A890FF\", \"#00BE7DFF\", \"#6CD05EFF\",   \"#BBDD38FF\", \"#FDE333FF\" )  plot(clr_grayscale(viridis_colors, method = \"luma\"))  plot(clr_grayscale(viridis_colors, method = \"averaging\"))  plot(clr_grayscale(viridis_colors, method = \"min_decomp\"))  plot(clr_grayscale(viridis_colors, method = \"max_decomp\"))  plot(clr_grayscale(viridis_colors, method = \"red_channel\"))  plot(clr_grayscale(viridis_colors, method = \"green_channel\"))  plot(clr_grayscale(viridis_colors, method = \"blue_channel\"))"},{"path":"/reference/clr_lighten.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a color lighter — clr_lighten","title":"Make a color lighter — clr_lighten","text":"Make color lighter","code":""},{"path":"/reference/clr_lighten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a color lighter — clr_lighten","text":"","code":"clr_lighten(col, shift = 0.5, space = c(\"HCL\", \"HSL\", \"combined\"))"},{"path":"/reference/clr_lighten.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Make a color lighter — clr_lighten","text":"https://en.wikipedia.org/wiki/HSL_and_HSV https://en.wikipedia.org/wiki/CIELUV https://arxiv.org/abs/1903.06490","code":""},{"path":"/reference/clr_lighten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a color lighter — clr_lighten","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. shift number 0 1. 0 zero lightening, 1 complete lightening, turning color white. Defaults 0.5. space character string specifying color space adjustment happens. Can either \"HCL\", \"HSL\" \"combined\". Defaults \"HCL\".","code":""},{"path":"/reference/clr_lighten.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a color lighter — clr_lighten","text":"colors object length col.","code":""},{"path":"/reference/clr_lighten.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a color lighter — clr_lighten","text":"colors transformed HSL color space (hue, saturation, lightness) lightness color  modified. lightness color takes value 0 1, 0 black 1 white. shift takes value 0 1, 0 means lightness stays unchanged 1 means completely white. example, lightness color 0.6 shift 0.5, lightness set halfway point 0.6 1 0.8. space = \"HSL\" colors transformed HSL space lightness value L adjusted. space = \"HCL\" colors transformed Cylindrical HCL space luminance value L adjusted. space = \"combined\" colors transformed HSL Cylindrical HCL space. color adjusting happening HLS copied values HCL transformation. Thus, \"combined\" transformation adjusts luminance HCL space chroma HSL space. information regarding use color spaces, please refer colorspace paper https://arxiv.org/abs/1903.06490.","code":""},{"path":[]},{"path":"/reference/clr_lighten.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a color lighter — clr_lighten","text":"","code":"# Using linear shift plot(clr_lighten(rep(\"red\", 11), shift = seq(0, 1, 0.1)))  plot(clr_lighten(rep(\"red\", 11), shift = seq(0, 1, 0.1), space = \"HSL\"))  plot(clr_lighten(rep(\"red\", 11), shift = seq(0, 1, 0.1), space = \"combined\"))   plot(clr_lighten(terrain.colors(10)))   # Using exponential shifts plot(clr_lighten(rep(\"red\", 11), shift = log(seq(1, exp(1), length.out = 11))))"},{"path":"/reference/clr_mix.html","id":null,"dir":"Reference","previous_headings":"","what":"Mix color into color(s) — clr_mix","title":"Mix color into color(s) — clr_mix","text":"Mix color color(s)","code":""},{"path":"/reference/clr_mix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mix color into color(s) — clr_mix","text":"","code":"clr_mix(col, mix_in, ratio = 0.5)"},{"path":"/reference/clr_mix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mix color into color(s) — clr_mix","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. mix_in col. ratio Numeric 0 1. 0 result col. 1 results colors turning mix_in. Must length 1 length col.","code":""},{"path":"/reference/clr_mix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mix color into color(s) — clr_mix","text":"colors object length col.","code":""},{"path":"/reference/clr_mix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mix color into color(s) — clr_mix","text":"","code":"plot(clr_mix(rainbow(10), \"blue\"))   plot(clr_mix(rainbow(10), \"red\"))   plot(clr_mix(rainbow(10), \"#5500EE\"))   plot(clr_mix(rainbow(10), \"black\", seq(1, 0, length.out = 10)))"},{"path":"/reference/clr_negate.html","id":null,"dir":"Reference","previous_headings":"","what":"Negate colors in RGB space — clr_negate","title":"Negate colors in RGB space — clr_negate","text":"Negate colors RGB space","code":""},{"path":"/reference/clr_negate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negate colors in RGB space — clr_negate","text":"","code":"clr_negate(col)"},{"path":"/reference/clr_negate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negate colors in RGB space — clr_negate","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[].","code":""},{"path":"/reference/clr_negate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negate colors in RGB space — clr_negate","text":"colors object length col.","code":""},{"path":"/reference/clr_negate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negate colors in RGB space — clr_negate","text":"negation color happening red-green-blue colorspace RGB. means take specification orange rgb(255, 165, 0), negate taking opposite number scale 0 255, leaving us rgb(0, 90, 255), shade blue.","code":""},{"path":"/reference/clr_negate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negate colors in RGB space — clr_negate","text":"","code":"clr_negate(\"orange\") #> <colors> #> #005AFFFF   terr <- color(terrain.colors(10))  terr #> <colors> #> #00A600FF #2DB600FF #63C600FF #A0D600FF #E6E600FF #E8C32EFF #EBB25EFF #EDB48EFF #F0C9C0FF #F2F2F2FF  clr_negate(terr) #> <colors> #> #FF59FFFF #D249FFFF #9C39FFFF #5F29FFFF #1919FFFF #173CD1FF #144DA1FF #124B71FF #0F363FFF #0D0D0DFF   plot(terr)  plot(clr_negate(terr))"},{"path":"/reference/clr_rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate the colors around the hue wheel — clr_rotate","title":"Rotate the colors around the hue wheel — clr_rotate","text":"Rotate colors around hue wheel","code":""},{"path":"/reference/clr_rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate the colors around the hue wheel — clr_rotate","text":"","code":"clr_rotate(col, degrees = 0)"},{"path":"/reference/clr_rotate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Rotate the colors around the hue wheel — clr_rotate","text":"https://en.wikipedia.org/wiki/HCL_color_space","code":""},{"path":"/reference/clr_rotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate the colors around the hue wheel — clr_rotate","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. degrees number 0 360, denoting amount degrees colors rotated. Defaults 0.","code":""},{"path":"/reference/clr_rotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate the colors around the hue wheel — clr_rotate","text":"colors object length col.","code":""},{"path":"/reference/clr_rotate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate the colors around the hue wheel — clr_rotate","text":"colors transformed HCL color space (Hue-Chroma-Luminance) hue color rotated.","code":""},{"path":"/reference/clr_rotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate the colors around the hue wheel — clr_rotate","text":"","code":"plot(clr_rotate(terrain.colors(10)))   plot(clr_rotate(terrain.colors(10), degrees = 90))   plot(clr_rotate(terrain.colors(10), degrees = 180))   plot(clr_rotate(rep(\"magenta\", 11), degrees = seq(0, 360, length.out = 11)))"},{"path":"/reference/clr_saturate.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a color more saturated — clr_saturate","title":"Make a color more saturated — clr_saturate","text":"Make color saturated","code":""},{"path":"/reference/clr_saturate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a color more saturated — clr_saturate","text":"","code":"clr_saturate(col, shift = 0.5)"},{"path":"/reference/clr_saturate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Make a color more saturated — clr_saturate","text":"https://en.wikipedia.org/wiki/HSL_and_HSV","code":""},{"path":"/reference/clr_saturate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a color more saturated — clr_saturate","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. shift numeric 0 1. 0 zero saturation, 1 complete saturation. Defaults 0.5.","code":""},{"path":"/reference/clr_saturate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a color more saturated — clr_saturate","text":"color object length col.","code":""},{"path":"/reference/clr_saturate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a color more saturated — clr_saturate","text":"colors transformed HSL color space (hue, saturation, lightness) saturation color modified. saturation color takes value 0 1, 0 black 1 white. shift takes value 0 1, 0 means saturation stays unchanged 1 means completely saturated. example, saturation color 0.6 shift 0.5, saturation set halfway point 0.6 1 0.8.","code":""},{"path":[]},{"path":"/reference/clr_saturate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a color more saturated — clr_saturate","text":"","code":"plot(clr_saturate(terrain.colors(10), shift = 0.5))   plot(clr_saturate(terrain.colors(10), shift = 1))   plot(clr_saturate(rep(\"firebrick\", 11), shift = seq(0, 1, 0.1)))"},{"path":"/reference/color.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn vector of colors to color vector — color","title":"Turn vector of colors to color vector — color","text":"Turn vector colors color vector","code":""},{"path":"/reference/color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn vector of colors to color vector — color","text":"","code":"color(col)  colour(col)"},{"path":"/reference/color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn vector of colors to color vector — color","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[].","code":""},{"path":"/reference/color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn vector of colors to color vector — color","text":"colors object length col. Returns hex 8 digits form \"#rrggbbaa\". See Details.","code":""},{"path":"/reference/color.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Turn vector of colors to color vector — color","text":"Alpha values automatically added hexcodes. alpha value present col, default alpha (FF).","code":""},{"path":"/reference/color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn vector of colors to color vector — color","text":"","code":"terrain_10 <- color(terrain.colors(10))  terrain_10[1:4] #> <colors> #> #00A600FF #2DB600FF #63C600FF #A0D600FF   plot(terrain_10)   plot(terrain_10, labels = TRUE)   grey_10 <- color(gray.colors(10, start = 0, end = 1))  grey_10 #> <colors> #> #000000FF #5E5E5EFF #818181FF #9B9B9BFF #B0B0B0FF #C3C3C3FF #D4D4D4FF #E3E3E3FF #F2F2F2FF #FFFFFFFF   plot(grey_10, labels = TRUE)"},{"path":"/reference/colorblindness.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate color vision deficiency — clr_protan","title":"Simulate color vision deficiency — clr_protan","text":"Simulate color vision deficiency","code":""},{"path":"/reference/colorblindness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate color vision deficiency — clr_protan","text":"","code":"clr_protan(col, severity = 1)  clr_deutan(col, severity = 1)  clr_tritan(col, severity = 1)"},{"path":"/reference/colorblindness.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulate color vision deficiency — clr_protan","text":"http://www.inf.ufrgs.br/~oliveira/pubs_files/CVD_Simulation/CVD_Simulation.html","code":""},{"path":"/reference/colorblindness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate color vision deficiency — clr_protan","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. severity numeric indicating severity color vision defect. Must number 0 1, 0 means deficiency, 1 means complete deficiency. Defaults 1.","code":""},{"path":"/reference/colorblindness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate color vision deficiency — clr_protan","text":"colors object length col.","code":""},{"path":"/reference/colorblindness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate color vision deficiency — clr_protan","text":"matrices used perform transformations taken 1.0 value table 1 http://www.inf.ufrgs.br/~oliveira/pubs_files/CVD_Simulation/CVD_Simulation.html. Values severity values 0 1 linearly interpolated.","code":""},{"path":"/reference/colorblindness.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate color vision deficiency — clr_protan","text":"Gustavo M. Machado, Manuel M. Oliveira, Leandro . F. Fernandes \"Physiologically-based Model Simulation Color Vision Deficiency\". IEEE Transactions Visualization Computer Graphics. Volume 15 (2009), Number 6, November/December 2009. pp. 1291-1298.","code":""},{"path":"/reference/colorblindness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate color vision deficiency — clr_protan","text":"","code":"rainbow_colors <- color(rainbow(10))  plot(clr_protan(rainbow_colors))  plot(clr_deutan(rainbow_colors))  plot(clr_tritan(rainbow_colors))   viridis_colors <- c(   \"#4B0055FF\", \"#422C70FF\", \"#185086FF\", \"#007094FF\",   \"#008E98FF\", \"#00A890FF\", \"#00BE7DFF\", \"#6CD05EFF\",   \"#BBDD38FF\", \"#FDE333FF\" )  plot(clr_protan(viridis_colors))  plot(clr_deutan(viridis_colors))  plot(clr_tritan(viridis_colors))"},{"path":"/reference/contrast_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast ratio between colors — contrast_ratio","title":"Contrast ratio between colors — contrast_ratio","text":"contrast_ratio() calculates contrast ratio color x color(s) y. Contrast ratios can range 1 21 1 contrast (.e., color) 21 highest contrast.","code":""},{"path":"/reference/contrast_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast ratio between colors — contrast_ratio","text":"","code":"contrast_ratio(x, y)"},{"path":"/reference/contrast_ratio.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Contrast ratio between colors — contrast_ratio","text":"https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html","code":""},{"path":"/reference/contrast_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast ratio between colors — contrast_ratio","text":"x length 1 color object (see color()) length 1 vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. y color object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[].","code":""},{"path":"/reference/contrast_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast ratio between colors — contrast_ratio","text":"numerical vector length y calculated contrast ratios.","code":""},{"path":"/reference/contrast_ratio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Contrast ratio between colors — contrast_ratio","text":"formula used calculating contrast ratio two colors $$(L1 + 0.05) / (L2 + 0.05)$$ L1 relative luminance lighter colors, L2 relative luminance darker colors. Relative luminance calculated according https://www.w3.org/TR/WCAG21/#dfn-relative-luminance.","code":""},{"path":"/reference/contrast_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contrast ratio between colors — contrast_ratio","text":"","code":"contrast_ratio(\"red\", \"blue\") #> [1] 2.148936 contrast_ratio(\"grey20\", grey.colors(10)) #>  [1]  1.494662  2.406117  3.332732  4.271564  5.251557  6.161825  7.168355 #>  [8]  8.109768  9.125539 10.123342 contrast_ratio(\"white\", c(\"white\", \"black\")) #> [1]  1 21"},{"path":"/reference/extract_hcl.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract HCL components — clr_extract_chroma","title":"Extract HCL components — clr_extract_chroma","text":"Extract hue, chroma, luminance color components vector colors.","code":""},{"path":"/reference/extract_hcl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract HCL components — clr_extract_chroma","text":"","code":"clr_extract_chroma(col)"},{"path":"/reference/extract_hcl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract HCL components — clr_extract_chroma","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[].","code":""},{"path":"/reference/extract_hcl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract HCL components — clr_extract_chroma","text":"Numeric vector values.","code":""},{"path":"/reference/extract_hcl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract HCL components — clr_extract_chroma","text":"range value : Hue ranging 0 360. Luminance ranging 0 100. Chroma, dependent hue luminance, roughly within 0 180. Use clr_extract() planning extraction multiple components.","code":""},{"path":[]},{"path":"/reference/extract_hcl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract HCL components — clr_extract_chroma","text":"","code":"clr_extract_hue(rainbow(100), \"HCL\") #>   [1]  12.1743993  12.5306739  13.2019367  14.2401608  15.7433194  17.9398231 #>   [7]  20.6366468  24.0325037  28.2018637  33.5589531  39.4333571  46.0453955 #>  [13]  53.6927827  61.1129483  68.4353786  75.3605222  82.0763087  87.6722317 #>  [19]  92.9618832  98.2908700 102.9003017 107.0798367 111.0376255 114.2794484 #>  [25] 117.0851150 119.4813276 121.6212408 123.2717117 124.6104447 125.7287706 #>  [31] 126.5169189 127.0810239 127.4664561 127.6638177 127.8276701 128.0922246 #>  [37] 128.5275857 129.1794009 130.0854409 131.3825914 132.9672551 134.9801182 #>  [43] 137.6995986 140.9043822 144.8840847 150.1628571 156.2513143 163.5609312 #>  [49] 172.0772023 182.2152662 192.1722280 202.4574741 213.6022041 223.4263658 #>  [55] 232.1003165 239.8531264 245.7609401 250.5190622 254.3191292 257.5141705 #>  [61] 259.8583403 261.6900809 263.1798354 264.2150184 264.9569153 265.4762446 #>  [67] 265.7508695 265.9363269 266.1594999 266.5946828 267.2300189 268.1144990 #>  [73] 269.3630201 270.8473859 272.6617323 274.9877940 277.5565139 280.5153102 #>  [79] 283.8682749 287.8672275 291.9807845 296.3939251 301.3474111 306.1242680 #>  [85] 311.0483286 316.4420366 322.6530408 328.7538820 334.9253503 341.3417484 #>  [91] 346.9882915 352.1195501 356.9195422   0.7492825   3.9365096   6.6657608 #>  [97]   8.6462991  10.1224166  11.1502985  11.8185455 clr_extract_chroma(rainbow(100)) #>   [1] 179.04898 177.11377 173.61318 168.54536 161.87166 153.31956 144.40822 #>   [8] 135.14274 126.04672 117.10258 109.91317 104.26925 100.25084  98.48728 #>  [15]  98.62633 100.49717 104.11255 106.86739 106.90138 107.88981 109.55103 #>  [22] 111.75435 114.51407 117.31846 120.18789 123.00019 125.82357 128.22168 #>  [29] 130.31983 132.18502 133.56456 134.58644 135.30174 135.67349 135.35722 #>  [36] 134.35401 132.74150 130.41295 127.33682 123.23163 118.64503 113.41334 #>  [43] 107.24230 101.06279  94.70899  88.03803  82.23807  77.29365  73.66168 #>  [50]  71.73209  72.08567  70.90941  72.31466  76.06311  81.81303  89.55934 #>  [57]  97.70330 106.08191 114.10870 121.66863 127.32690 131.27795 133.51325 #>  [64] 133.96596 133.31913 132.13917 131.19271 130.75232 131.00730 131.46454 #>  [71] 132.04551 132.70494 133.39123 133.91652 134.24574 134.33166 134.16891 #>  [78] 133.83095 133.42781 133.09667 133.06697 133.49938 134.66666 136.57595 #>  [85] 134.22695 130.40553 127.79542 126.90263 127.60602 130.08879 133.88359 #>  [92] 138.83028 144.98573 151.16773 157.34293 163.51023 168.57453 172.71353 #>  [99] 175.79778 177.89830 clr_extract_luminance(rainbow(100)) #>   [1] 53.24079 53.60957 54.28831 55.29940 56.68807 58.57857 60.71191 63.16228 #>   [9] 65.89278 69.07098 72.26072 75.61941 79.35472 82.97263 86.68063 90.46051 #>  [17] 94.55457 96.75739 95.65703 94.55998 93.60533 92.72372 91.86516 91.13774 #>  [25] 90.48561 89.90853 89.37479 88.94964 88.59520 88.29194 88.07403 87.91582 #>  [33] 87.80661 87.75033 87.74531 87.77076 87.81205 87.87254 87.95415 88.06626 #>  [41] 88.19634 88.35183 88.54686 88.75804 88.99741 89.28457 89.58419 89.91367 #>  [49] 90.27335 90.69053 91.11322 86.76756 82.12286 77.76587 73.41459 68.79193 #>  [57] 64.49163 60.24473 56.07922 51.76843 47.90478 44.28084 40.77353 37.92425 #>  [65] 35.60273 33.80044 32.77642 32.36890 32.62660 33.11981 33.81896 34.75429 #>  [73] 36.00730 37.40776 39.00771 40.90976 42.85222 44.92634 47.11166 49.54462 #>  [81] 51.90416 54.32571 56.96391 59.47859 59.75985 58.95441 58.15139 57.45286 #>  [89] 56.80824 56.18125 55.65103 55.17687 54.73281 54.37378 54.06913 53.80232 #>  [97] 53.60440 53.45413 53.34795 53.27819"},{"path":"/reference/extract_hsl.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract HSL components — clr_extract_hue","title":"Extract HSL components — clr_extract_hue","text":"Extract hue, saturation, lightness color components vector colors.","code":""},{"path":"/reference/extract_hsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract HSL components — clr_extract_hue","text":"","code":"clr_extract_hue(col, space = c(\"HSL\", \"HCL\"))  clr_extract_saturation(col)  clr_extract_lightness(col)  clr_extract_luminance(col)"},{"path":"/reference/extract_hsl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract HSL components — clr_extract_hue","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. space character string specifying color space hue extracted . Can either \"HCL\" \"HSL\" (default).","code":""},{"path":"/reference/extract_hsl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract HSL components — clr_extract_hue","text":"Numeric vector values.","code":""},{"path":"/reference/extract_hsl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract HSL components — clr_extract_hue","text":"range value : 0 360 hue. circular fashion 0 360 near identical. 0 red. 0 100 saturation 100 full saturation 0 saturation. 0 100 lightness 100 full lightness 0 lightness. Use clr_extract() planning extraction multiple components.","code":""},{"path":[]},{"path":"/reference/extract_hsl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract HSL components — clr_extract_hue","text":"","code":"clr_extract_hue(rainbow(100), \"HSL\") #>   [1]   0.000000   3.529412   7.294118  10.823529  14.352941  18.117647 #>   [7]  21.647059  25.176471  28.705882  32.470588  36.000000  39.529412 #>  [13]  43.294118  46.823529  50.352941  53.882353  57.647059  61.176471 #>  [19]  64.705882  68.470588  72.000000  75.529412  79.294118  82.823529 #>  [25]  86.352941  89.882353  93.647059  97.176471 100.705882 104.470588 #>  [31] 108.000000 111.529412 115.294118 118.823529 122.352941 126.117647 #>  [37] 129.647059 133.176471 136.705882 140.470588 144.000000 147.529412 #>  [43] 151.294118 154.823529 158.352941 162.117647 165.647059 169.176471 #>  [49] 172.705882 176.470588 180.000000 183.529412 187.294118 190.823529 #>  [55] 194.352941 198.117647 201.647059 205.176471 208.705882 212.470588 #>  [61] 216.000000 219.529412 223.294118 226.823529 230.352941 234.117647 #>  [67] 237.647059 241.176471 244.705882 248.470588 252.000000 255.529412 #>  [73] 259.294118 262.823529 266.352941 270.117647 273.647059 277.176471 #>  [79] 280.705882 284.470588 288.000000 291.529412 295.294118 298.823529 #>  [85] 302.352941 305.882353 309.647059 313.176471 316.705882 320.470588 #>  [91] 324.000000 327.529412 331.294118 334.823529 338.352941 342.117647 #>  [97] 345.647059 349.176471 352.705882 356.470588 clr_extract_saturation(rainbow(100)) #>   [1] 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 #>  [19] 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 #>  [37] 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 #>  [55] 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 #>  [73] 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 #>  [91] 100 100 100 100 100 100 100 100 100 100 clr_extract_lightness(rainbow(100)) #>   [1] 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 #>  [26] 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 #>  [51] 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 #>  [76] 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50"},{"path":"/reference/extract_rgba.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract RGB components — extract_rgba","title":"Extract RGB components — extract_rgba","text":"Extract red, green, blue color components vector colors.","code":""},{"path":"/reference/extract_rgba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract RGB components — extract_rgba","text":"","code":"clr_extract_red(col)  clr_extract_green(col)  clr_extract_blue(col)  clr_extract_alpha(col)"},{"path":"/reference/extract_rgba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract RGB components — extract_rgba","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[].","code":""},{"path":"/reference/extract_rgba.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract RGB components — extract_rgba","text":"numeric vector giving extracted values.","code":""},{"path":"/reference/extract_rgba.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract RGB components — extract_rgba","text":"values output range 0 255. Use clr_extract() planning extract multiple components.","code":""},{"path":[]},{"path":"/reference/extract_rgba.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract RGB components — extract_rgba","text":"","code":"clr_extract_red(rainbow(100)) #>   [1] 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 #>  [19] 235 219 204 189 173 158 143 128 112  97  82  66  51  36  20   5   0   0 #>  [37]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>  [55]   0   0   0   0   0   0   0   0   0   0   0   0   0   5  20  36  51  66 #>  [73]  82  97 112 128 143 158 173 189 204 219 235 250 255 255 255 255 255 255 #>  [91] 255 255 255 255 255 255 255 255 255 255 clr_extract_green(rainbow(100)) #>   [1]   0  15  31  46  61  77  92 107 122 138 153 168 184 199 214 229 245 255 #>  [19] 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 #>  [37] 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 240 224 209 #>  [55] 194 178 163 148 133 117 102  87  71  56  41  25  10   0   0   0   0   0 #>  [73]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>  [91]   0   0   0   0   0   0   0   0   0   0 clr_extract_blue(rainbow(100)) #>   [1]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>  [19]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  10  26 #>  [37]  41  56  71  87 102 117 133 148 163 179 194 209 224 240 255 255 255 255 #>  [55] 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 #>  [73] 255 255 255 255 255 255 255 255 255 255 255 255 245 230 214 199 184 168 #>  [91] 153 138 122 107  92  76  61  46  31  15 clr_extract_alpha(rainbow(100)) #>   [1] 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 #>  [19] 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 #>  [37] 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 #>  [55] 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 #>  [73] 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 #>  [91] 255 255 255 255 255 255 255 255 255 255"},{"path":"/reference/is_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if object is a colors object — is_color","title":"Test if object is a colors object — is_color","text":"Test object colors object","code":""},{"path":"/reference/is_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if object is a colors object — is_color","text":"","code":"is_color(x)"},{"path":"/reference/is_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if object is a colors object — is_color","text":"x object.","code":""},{"path":"/reference/is_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if object is a colors object — is_color","text":"TRUE object inherits colors class, else FALSE.","code":""},{"path":"/reference/modify_hcl.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify individual HCL axes — modify_hcl","title":"Modify individual HCL axes — modify_hcl","text":"function lets modify individual axes color HCL color space.","code":""},{"path":"/reference/modify_hcl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify individual HCL axes — modify_hcl","text":"","code":"modify_hcl(col, h, c, l)"},{"path":"/reference/modify_hcl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Modify individual HCL axes — modify_hcl","text":"https://en.wikipedia.org/wiki/HCL_color_space","code":""},{"path":"/reference/modify_hcl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify individual HCL axes — modify_hcl","text":"col colors object (see color()) vector three kinds R color specifications, .e., either color name (listed grDevices::colors()), hexadecimal string (see col2rgb()), positive integer meaning grDevices::palette()[]. h Expression modify hue col. c Expression modify chroma col. l Expression modify luminance col.","code":""},{"path":"/reference/modify_hcl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify individual HCL axes — modify_hcl","text":"colors object.","code":""},{"path":"/reference/modify_hcl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify individual HCL axes — modify_hcl","text":"expression used h, c, l evaluated hcl space access h, c, l vectors along vectors calling environment. h ranges 0 360, l ranges 0 100, c dependent h l roughly within 0 180, often narrower range. Colors modification adjusted fit within color space.","code":""},{"path":"/reference/modify_hcl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify individual HCL axes — modify_hcl","text":"","code":"plot(modify_hcl(\"red\", h = 160))  plot(modify_hcl(\"red\", h = h + 50))   plot(modify_hcl(\"red\", h = h + 1:100))  plot(modify_hcl(\"red\", c = c - 1:200))  plot(modify_hcl(\"red\", l = l + 1:50))   plot(modify_hcl(rainbow(10), l = 25))   plot(modify_hcl(rainbow(10), h + h / 2, l = 70))"},{"path":"/reference/prismatic-package.html","id":null,"dir":"Reference","previous_headings":"","what":"prismatic: Color Manipulation Tools — prismatic-package","title":"prismatic: Color Manipulation Tools — prismatic-package","text":"Manipulate visualize colors intuitive, low-dependency functional way.","code":""},{"path":[]},{"path":"/reference/prismatic-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"prismatic: Color Manipulation Tools — prismatic-package","text":"Maintainer: Emil Hvitfeldt emilhhvitfeldt@gmail.com (ORCID)","code":""},{"path":[]},{"path":"/news/index.html","id":"prismatic-112","dir":"Changelog","previous_headings":"","what":"prismatic 1.1.2","title":"prismatic 1.1.2","text":"CRAN release: 2024-04-10 color() now maintains names input vector, allowing plot() use color names rather hex values label = TRUE. can also provide label custom set color labels. Unnamed colors labelled hex values (@gadenbuie, #27). Printing color objects now powered cli, superseded crayon (jack-davison, #28).","code":""},{"path":"/news/index.html","id":"prismatic-111","dir":"Changelog","previous_headings":"","what":"prismatic 1.1.1","title":"prismatic 1.1.1","text":"CRAN release: 2022-08-15 Fixed documentation HTML5 friendly.","code":""},{"path":"/news/index.html","id":"prismatic-110","dir":"Changelog","previous_headings":"","what":"prismatic 1.1.0","title":"prismatic 1.1.0","text":"CRAN release: 2021-10-17 Add extraction functions. best_contrast() added, can used find best contrasted colors.","code":""},{"path":"/news/index.html","id":"prismatic-100","dir":"Changelog","previous_headings":"","what":"prismatic 1.0.0","title":"prismatic 1.0.0","text":"CRAN release: 2021-01-05 functions now accepts zero length input. Added contrast_ratio() function calculate contrast ratios colors. (#18) Added modify_hcl() function modify individual HCL axes. (#20)","code":""},{"path":"/news/index.html","id":"breaking-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"prismatic 1.0.0","text":"clr_rotate() now uses HCL instead HSL color space rotation. (#19) clr_lightness() clr_darken() now uses HCL instead HSL default color space. (#19)","code":""},{"path":"/news/index.html","id":"prismatic-020","dir":"Changelog","previous_headings":"","what":"prismatic 0.2.0","title":"prismatic 0.2.0","text":"CRAN release: 2019-12-01 Added clr_alpha() function specify transparency. (#9) Added labels argument plot.colors() show hexcode plot. (#8) clr_rotate()’s argument degrees now default 0. clr_mix()’s argument ratio now correctly takes varied lengths argument. added check_color_blindness() allow quick visual color deficiency examination. (#11)","code":""},{"path":"/news/index.html","id":"prismatic-010","dir":"Changelog","previous_headings":"","what":"prismatic 0.1.0","title":"prismatic 0.1.0","text":"CRAN release: 2019-10-06 Release CRAN","code":""}]
